@model InventoryPurchaseSearchModel

<div class="panel-body">
    @await Html.PartialAsync("Table", new DataTablesModel
    {
    Name = "inventory-purchase-grid",
    UrlRead = new DataUrl(Model.ApprovalMode ? "GetPurchaseRecordForApproval" : "GetUnfinalisedPurchaseRecord", "Inventory"),
    UrlDelete = new DataUrl("DeletePurchaseRecord", "Inventory", null),
    Length = Model.PageSize,
    AfterDeleteScript = "updateTable('#inventories-grid');",
    LengthMenu = Model.AvailablePageSizes,
    ColumnCollection = new List<ColumnProperty>
        {
            new ColumnProperty(nameof(InventoryPurchaseModel.ProductName))
            {
                Title = T("Admin.Catalog.Inventories.ProductName").Text
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.Sku))
            {
                Title = T("Admin.Catalog.Inventories.Sku").Text
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.WarehouseName))
            {
                  Title = T("Admin.Catalog.Inventories.WarehouseName").Text,
                  Width = "150",
                  ClassName = NopColumnClassDefaults.CenterAll,
                  Visible = Model.MultipleWarehouses

            },
            new ColumnProperty(nameof(InventoryPurchaseModel.Quantity))
            {
                Title = T("Admin.Catalog.Inventories.Qty").Text
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.PriceInclTax))
            {
                Title = T("Admin.Catalog.Inventories.PriceInclTax").Text
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.Status))
            {
                Title = T("Admin.Catalog.Inventories.PurchaseStatus").Text
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.Note))
            {
                Title = T("Admin.Catalog.Inventories.PurchaseNote").Text
            },
             new ColumnProperty(nameof(InventoryPurchaseModel.Id))
            {
                Width = "100",
                Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                ClassName =  NopColumnClassDefaults.Button,
                Visible = !Model.ApprovalMode
            },

               new ColumnProperty(nameof(InventoryPurchaseModel.Id))
            {
                Width = "100",
                Render = new RenderButtonCustom(NopButtonClassDefaults.Success, T("Admin.Common.Approve").Text)
                       {
                          OnClickFunctionName = "approveSelectedPurchase"
                       },
                ClassName =  NopColumnClassDefaults.Button,
                Visible = Model.ApprovalMode
            }
    }
})
</div>

<script>
                           function approveSelectedPurchase(id) {
                                 
                                var postData = {
                                    id: id                                    
                                };
                                addAntiForgeryToken(postData);
                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("ApproveSelectedPurchase", "Inventory"))",
                                    data: postData,
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        display_nop_error(textStatus);
                                    },
                                    complete: function (jqXHR, textStatus, error) {
                                        error && display_nop_error(error);
                                        updateTable('#inventory-purchase-grid');                                        
                                    }
                                });
                                return false;
                            }

</script>