@model InventoryPurchaseSearchModel


<div class="panel-body">

   <input type="hidden" asp-for="PaymentId" />

    @await Html.PartialAsync("Table", new DataTablesModel
{
    Name = "inventory-purchase-grid",
    UrlRead = new DataUrl("GetUnfinalisedPurchaseRecord", "Inventory", null),
    UrlDelete = new DataUrl("DeletePurchaseRecord", "Inventory", null),
    Length = Model.PageSize,
    AfterDeleteScript = "updateTable('#inventories-grid');",
    LengthMenu = Model.AvailablePageSizes,
    Filters = new List<FilterParameter>
                    {
                        new FilterParameter(nameof(Model.PaymentId))
                    },
    ColumnCollection = new List<ColumnProperty>
        {
          new ColumnProperty(nameof(InventoryPurchaseModel.Id))
           {
              Visible = false
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.Status))
            {
                    Title = T("Admin.Common.PaymentStatus").Text,
                    ClassName =  NopColumnClassDefaults.Button,
                    Render = new RenderCustom("renderInventoryPurchaseStatus")
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.ProductName))
            {
                Title = T("Admin.Catalog.Inventories.ProductName").Text
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.Sku))
            {
                Title = T("Admin.Catalog.Inventories.Sku").Text
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.WarehouseName))
            {
                  Title = T("Admin.Catalog.Inventories.WarehouseName").Text,
                  Width = "150",
                  ClassName = NopColumnClassDefaults.CenterAll,
                  Visible = Model.MultipleWarehouses

            },
            new ColumnProperty(nameof(InventoryPurchaseModel.Quantity))
            {
                Title = T("Admin.Catalog.Inventories.Qty").Text
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.PriceInclTax))
            {
                Title = T("Admin.Catalog.Inventories.PriceInclTax").Text,
            },
              new ColumnProperty(nameof(InventoryPurchaseModel.PurchasedDate))
            {
                Title = T("Admin.Catalog.Inventories.PurchasedDate").Text,
                Render = new RenderDate()
            },
              new ColumnProperty(nameof(InventoryPurchaseModel.Id))
            {
                Width = "100",
                Render = new RenderButtonCustom(NopButtonClassDefaults.Success, T("Admin.Common.Add").Text)
                       {
                          OnClickFunctionName = "approveSelectedPurchase"
                       },
                ClassName =  NopColumnClassDefaults.Button,
                Visible = !(Model.PaymentId==0)
            },
             new ColumnProperty(nameof(InventoryPurchaseModel.Id))
            {
                    ClassName =  NopColumnClassDefaults.Button,
                    Render = new RenderCustom("renderInventoryPurchaseActionButton")
            },

              new ColumnProperty(nameof(InventoryPurchaseModel.PaymentId)){Visible= false}
    }
});
</div>

<script>
            function approveSelectedPurchase(id) {

                var postData = {
                    id: id
                };
                addAntiForgeryToken(postData);
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("ApproveSelectedPurchase", "Inventory"))",
                    data: postData,
                    error: function (jqXHR, textStatus, errorThrown) {
                        display_nop_error(textStatus);
                    },
                    complete: function (jqXHR, textStatus, error) {
                        error && display_nop_error(error);
                        updateTable('#inventory-purchase-grid');
                    }
                });
                return false;
            }

    function renderInventoryPurchaseActionButton(data, type, row, meta) {
        if (row.PaymentId == 0 && !row.AdditionalFee)
            return '<a href="#" class="btn btn-default" ' +
                'onclick = "table_deletedata_inventory_purchase_grid(\'' + data + '\');return false;" >' +
        ' <i class="fa fa-remove"></i>@T("Admin.Common.Delete").Text</a > ';

        if (row.PaymentId > 0 && row.StatusId < 30)  return '<a class="btn btn-default" ' +
                        'href = "@(Url.Action("EditPayment", "Inventory"))/'+row.PaymentId+'" >' +
            ' <i class="fa fa-eye"></i>@T("Admin.Common.ViewPayment").Text</a > ';

        return '';
    }

    function renderInventoryPurchaseStatus(data, type, row, meta) {
        var color;
        switch (row.StatusId) {
            case 0:
                color = 'yellow';
                break;
            case 10:
                color = 'blue';
                break;
            case 20:
                color = 'green';
                break;
            case 30:
                color = 'red';
                break;
        }
        return '<span class="grid-report-item ' + color + '">' + data + '</span >';
    }
</script>