@model InventoryChangeSearchModel

@{
    const string hideSearchBlockAttributeName = "InventoriesChangePage.Approval.HideSearchBlock";
    var hideSearchBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSearchBlockAttributeName);
}

<div class="form-horizontal">
    <div class="panel-body">
        @await Html.PartialAsync("Table", new DataTablesModel
   {
       Name = "inventory-changes-for-approval-grid",
       UrlRead = new DataUrl("GetInventoryChangesInProcessForApproval", "Inventory"),
       Length = Model.PageSize,
       LengthMenu = Model.AvailablePageSizes,
       ColumnCollection = new List<ColumnProperty>
       {
                 new ColumnProperty(nameof(InventoryChangeModel.DateUtc))
           {
               Title = T("Admin.Common.CreatedOn").Text,
                    Render = new RenderDate()
           },
                     new ColumnProperty(nameof(InventoryChangeModel.ProductName))
            {
                Title = T("Admin.Catalog.Inventories.ProductName").Text
            },
                         new ColumnProperty(nameof(InventoryChangeModel.ProductSKU))
            {
                Title = T("Admin.Catalog.Inventories.SKU").Text
            },

      new ColumnProperty(nameof(InventoryChangeModel.StockQuantityChange))
       {
           Title = T("Admin.Inventory.InventoryChange.StockQuantityChange").Text
       },

         new ColumnProperty(nameof(InventoryChangeModel.Id))
            {
                Width = "150",
                ClassName = NopColumnClassDefaults.CenterAll,
                    Render = new RenderButtonCustom(NopButtonClassDefaults.Default, T("Admin.Common.Received").Text)
                        {
                            OnClickFunctionName =  "approveReceived"
                        }

            }
        }
   })
    </div>
</div>

<script>

    function renderInventoryPurchaseStatus(data, type, row, meta) {
        var color;
        switch (row.StatusId) {
            case 0:
                color = 'gray';
                break;
            case 10:
                color = 'blue';
                break;
            case 20:
                color = 'yellow';
                break;
            case 30:
                color = 'green';
                break;
        }
        return '<span class="grid-report-item ' + color + '">' + data + '</span >';
    }

    function approveReceived(id) {
                var postData = {
                    id: id
                };
                addAntiForgeryToken(postData);
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("ApproveSelectedInventoryChange", "Inventory"))",
                    data: postData,
                    error: function (jqXHR, textStatus, errorThrown) {
                        display_nop_error(textStatus);
                    },
                    complete: function (jqXHR, textStatus, error) {
                        error && display_nop_error(error);
                        updateTable('#inventory-changes-for-approval-grid');
                        updateTable('#inventory-changes-history-grid');
                    }
                });
                return false;
    }
</script>

