@model InventoryPurchaseSearchModel


<div class="panel-body">

   <input type="hidden" asp-for="PaymentId" />

    @await Html.PartialAsync("Table", new DataTablesModel
{
    Name = "inventory-purchase-included-grid",
    UrlRead = new DataUrl("GetPurchaseRecordIncludedInPayment", "Inventory", null),
    UrlDelete = new DataUrl("DeletePurchaseRecord", "Inventory", null),
    Length = Model.PageSize,
    Paging = true,
    AfterDeleteScript = "updateTable('#inventories-grid');",
    LengthMenu = Model.AvailablePageSizes,
    FooterCallback = "ordersfootercallback",
    FooterColumns = 8,
    Filters = new List<FilterParameter>
                    {
                        new FilterParameter(nameof(Model.PaymentId))
                    },
    ColumnCollection = new List<ColumnProperty>
        {
          new ColumnProperty(nameof(InventoryPurchaseModel.Id))
           {
              Visible = false
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.ProductName))
            {
                Title = T("Admin.Catalog.Inventories.ProductName").Text
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.Sku))
            {
                Title = T("Admin.Catalog.Inventories.Sku").Text
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.WarehouseName))
            {
                  Title = T("Admin.Catalog.Inventories.WarehouseName").Text,
                  Width = "150",
                  ClassName = NopColumnClassDefaults.CenterAll,
                  Visible = Model.MultipleWarehouses

            },
            new ColumnProperty(nameof(InventoryPurchaseModel.Quantity))
            {
                Title = T("Admin.Catalog.Inventories.Qty").Text
            },
            new ColumnProperty(nameof(InventoryPurchaseModel.PriceInclTax))
            {
                Title = T("Admin.Catalog.Inventories.PriceInclTax").Text,
            },

             new ColumnProperty(nameof(InventoryPurchaseModel.Id))
            {
                Width = "100",
                Render = new RenderButtonCustom(NopButtonClassDefaults.Success, T("Admin.Common.Exclude").Text)
                       {
                          OnClickFunctionName = "excludePayment"
                       },
                ClassName =  NopColumnClassDefaults.Button,
                Visible = !Model.ReadOnly
            },

              new ColumnProperty(nameof(InventoryPurchaseModel.PaymentId)){Visible= false}
    }
})
@{var totalColumnNumber = 5; }
</div>

<script>

    function renderInventoryPurchaseStatus(data, type, row, meta) {
        var color;
        switch (row.StatusId) {
            case 0:
                color = 'yellow';
                break;
            case 10:
                color = 'blue';
                break;
            case 20:
                color = 'green';
                break;
            case 30:
                color = 'red';
                break;
        }
        return '<span class="grid-report-item ' + color + '">' + data + '</span >';
    }

     function  excludePayment(id) {
             var postData = {
                id: id,
            };

            addAntiForgeryToken(postData);

            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.Action("ExcludeFromPayment", "Inventory"))",
                data: postData,
                success: function (data, textStatus, jqXHR) {
                    if (data.result) {
                        updateTable("#inventory-purchase-grid");
                        updateTable("#inventory-purchase-included-grid");
                    } else {
                        //display errors if returned
                        alert(data.message);
                    }
                },
               complete: function (jqXHR, textStatus) {

                }
            });
            return false;
    }

    function ordersfootercallback(tfoot, data, start, end, display) {
                                //update order totals summary
                                var postData = {
                                   id: @Model.PaymentId
                                };
                                addAntiForgeryToken(postData);

                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("GetPaymentTotal", "Inventory"))",
                                    data: postData,
                                    success: function (data, textStatus, jqXHR) {

                                        if (data) {
                                            for (var key in data) {
                                                var reportSummary = '<div><strong>@T("Admin.Common.Total"): </strong></div>'
                                                var reportSummaryValue = '<div><span>' + data['total'] +'</span></div>'
                                                var orderTotalsColumn = $('#inventory-purchase-included-grid').DataTable().column(@(totalColumnNumber-1));
                                                var orderTotalsColumnValue = $('#inventory-purchase-included-grid').DataTable().column(@(totalColumnNumber));
                                                $(orderTotalsColumn.footer()).html(reportSummary);
                                                $(orderTotalsColumnValue.footer()).html(reportSummaryValue);
                                            }
                                        }
                                    }
                                });
                            }


</script>