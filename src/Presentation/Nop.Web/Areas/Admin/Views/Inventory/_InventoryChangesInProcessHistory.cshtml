@model InventoryChangeSearchModel

@{
    const string hideSearchBlockAttributeName = "InventoriesChangePage.History.HideSearchBlock";
    var hideSearchBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSearchBlockAttributeName);
}

<div class="form-horizontal">
    <div class="panel-body">
        @await Html.PartialAsync("Table", new DataTablesModel
   {
       Name = "inventory-changes-history-grid",
       UrlRead = new DataUrl("GetInventoryChangesHistory", "Inventory"),
       Length = Model.PageSize,
       LengthMenu = Model.AvailablePageSizes,
       ColumnCollection = new List<ColumnProperty>
       {
                    new ColumnProperty(nameof(InventoryChangeModel.Status))
            {
                    Title = T("Admin.Common.Status").Text,
                    ClassName =  NopColumnClassDefaults.Button,
                    Render = new RenderCustom("renderInventoryPurchaseStatus")
            },
                 new ColumnProperty(nameof(InventoryChangeModel.DateUtc))
           {
               Title = T("Admin.Common.CreatedOn").Text,
                    Render = new RenderDate()
           },

           new ColumnProperty(nameof(InventoryChangeModel.Description))
            {
                Title = T("Admin.InventoryChangeModel.Description").Text
            },
           new ColumnProperty(nameof(InventoryChangeModel.WareHouseName))
       {
           Title = T("Admin.InventoryChangeModel.WareHouseName").Text
       },
                      new ColumnProperty(nameof(InventoryChangeModel.ProductName))
            {
                Title = T("Admin.Catalog.Inventories.ProductName").Text
            },
                         new ColumnProperty(nameof(InventoryChangeModel.ProductSKU))
            {
                Title = T("Admin.Catalog.Inventories.SKU").Text
            },

      new ColumnProperty(nameof(InventoryChangeModel.StockQuantityChange))
       {
           Title = T("Admin.InventoryChangeModel.StockQuantityChange").Text
       },
       new ColumnProperty(nameof(InventoryChangeModel.LastStatusChangeByUser))
       {
          Title = T("Admin.InventoryChangeModel.LastStatusChangeByUser").Text
       },
        new ColumnProperty(nameof(InventoryChangeModel.CreatedByUser))
       {
          Title = T("Admin.InventoryChangeModel.CreatedByUser").Text
       },

           new ColumnProperty(nameof(InventoryChangeModel.Id))
       {
            ClassName =  NopColumnClassDefaults.Button,
           Render = new RenderButtonView(new DataUrl("EditPayment")),
           Visible = Model.ApprovalVisible
       }
   }
   })
    </div>
</div>

<script>                                     
    function renderInventoryPurchaseStatus(data, type, row, meta) {
        var color;
        switch (row.StatusId) {
            case 0:
                color = 'gray';
                break;
            case 10:
                color = 'blue';
                break;
            case 20:
                color = 'yellow';
                break;
            case 30:
                color = 'green';
                break;
        }
        return '<span class="grid-report-item ' + color + '">' + data + '</span >';
    }
</script>

