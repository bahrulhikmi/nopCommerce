@model InventoryPurchasePaymentSearchModel

@{
    const string hideSearchBlockAttributeName = "InventoriesPage.Approval.HideSearchBlock";
    var hideSearchBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSearchBlockAttributeName);
}

<div class="form-horizontal">
    <div class="panel-group">
        <div class="panel panel-default panel-search">
            <div class="panel-body">
                <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                    <div class="search-text">@T("Admin.Common.Search")</div>
                    <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                    <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                </div>

                <div class="search-body @(hideSearchBlock ? "closed" : "")">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="WarehouseName" />
                                </div>
                                <div class="col-md-8">
                                    <nop-editor asp-for="WarehouseName" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="UnapprovedOnly" />
                                </div>
                                <div class="col-md-8">
                                    <nop-editor asp-for="UnapprovedOnly" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-7 col-md-offset-5">
                            <button type="button" id="search-purchase" class="btn btn-primary btn-search">
                                <i class="fa fa-search"></i>
                                @T("Admin.Common.Search")
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel-body">
        @await Html.PartialAsync("Table", new DataTablesModel
   {
       Name = "inventory-purchase-grid",
       UrlRead = new DataUrl("GetPurchasePaymentRecords", "Inventory"),
       UrlDelete = new DataUrl("DeletePurchaseRecord", "Inventory", null),
       SearchButtonId = "search-purchase",
       Length = Model.PageSize,
       LengthMenu = Model.AvailablePageSizes,
       Filters = new List<FilterParameter>
                   {
                        new FilterParameter(nameof(Model.WarehouseName)),
                        new FilterParameter(nameof(Model.UnapprovedOnly), typeof(bool))
                    },
       ColumnCollection = new List<ColumnProperty>
       {
            new ColumnProperty(nameof(InventoryPurchasePaymentModel.Id))
                        {
                            IsMasterCheckBox = true,
                            Render = new RenderCheckBox("checkbox_inventories"),
                            ClassName =  NopColumnClassDefaults.CenterAll,
                            Width = "50"
                        },
             new ColumnProperty(nameof(InventoryPurchasePaymentModel.User))
            {
                Title = T("Admin.Common.User").Text
            },
           new ColumnProperty(nameof(InventoryPurchasePaymentModel.Note))
            {
                Title = T("Admin.Common.Note").Text
            },
      new ColumnProperty(nameof(InventoryPurchasePaymentModel.Total))
       {
           Title = T("Admin.Common.Total").Text
       },
       new ColumnProperty(nameof(InventoryPurchasePaymentModel.DownloadId))
       {
           Title = T("Admin.Orders.OrderNotes.Fields.Download").Text,
                    Width = "200",
                    ClassName =  NopColumnClassDefaults.Button,
                    Render = new RenderCustom("renderColumnDownloadId")
       },
        new ColumnProperty(nameof(InventoryPurchasePaymentModel.CreatedOn))
       {
           Title = T("Admin.Common.CreatedOn").Text,
           Render = new RenderDate()
       },    
       new ColumnProperty(nameof(InventoryPurchaseModel.Id))
       {
           Render = new RenderButtonCustom(NopButtonClassDefaults.Success, T("Admin.Common.Approve").Text)
           {
               OnClickFunctionName = "approveSelectedPurchase"
           },
           ClassName = NopColumnClassDefaults.Button

       },
           new ColumnProperty(nameof(InventoryPurchaseModel.Id))
       {
            ClassName =  NopColumnClassDefaults.Button,
           Render = new RenderButtonView(new DataUrl("ViewPaymentForApproval"))

       }
   }
   })
    </div>
</div>

<script>
                           function approveSelectedPurchase(id) {

                                var postData = {
                                    id: id
                                };
                                addAntiForgeryToken(postData);
                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("ApproveSelectedPurchase", "Inventory"))",
                                    data: postData,
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        display_nop_error(textStatus);
                                    },
                                    complete: function (jqXHR, textStatus, error) {
                                        error && display_nop_error(error);
                                        updateTable('#inventory-purchase-grid');
                                    }
                                });
                                return false;
    }
      
            function renderColumnDownloadId(data, type, row, meta) {
                return (row.DownloadId > 0) ? '<a class="btn btn-default" href="@Url.Content("~/Admin/Download/DownloadFile")?downloadGuid=' + row.DownloadGuid + '"><i class="fa fa-download"></i>@T("Admin.Orders.OrderNotes.Fields.Download.Link")</a>' : '@T("Admin.Orders.OrderNotes.Fields.Download.Link.No")';
            }
</script>
